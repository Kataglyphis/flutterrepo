# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
         fetch-depth: 0

      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v2.3  
        with:
          channel: stable
          version: 3.19.3
      
      - name: Install wput
        run: sudo apt install wput
      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      # - uses: dart-lang/setup-dart@v1

      - name: Install dependencies
        run: |
          cd jotrockenmitlocken
          flutter pub get
          cd ..
          cd jotrockenmitlockenrepo
          flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      - name: Verify formatting
        continue-on-error: true
        run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        continue-on-error: true
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: |
          cd jotrockenmitlocken
          flutter test

      - name: Enable flutter web
        run: |
          cd jotrockenmitlocken
          flutter config --enable-web
      - name: 'Build Web App'
        run: | 
          cd jotrockenmitlocken
          flutter build web --web-renderer=canvaskit --release
      - name: "Deploy"
        uses: milanmk/actions-file-deployer@master
        with:
            remote-protocol: "ftp"
            remote-host: ${{ secrets.SERVER }}
            remote-user: ${{ secrets.USERNAME }}
            remote-password: ${{ secrets.PW }}
            local-path: "./jotrockenmitlocken/build/web/"
            remote-path: "./"
